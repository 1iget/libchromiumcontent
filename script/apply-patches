#!/usr/bin/env python

import os
import subprocess
import sys

from patch import apply_patches_from_directory


SOURCE_ROOT = os.path.abspath(os.path.dirname(os.path.dirname(__file__)))
PATCHES_DIR = os.path.join(SOURCE_ROOT, 'patches')
PATCHES_MAS_DIR = os.path.join(SOURCE_ROOT, 'patches-mas')
PATCHES_MIPS64EL_DIR = os.path.join(SOURCE_ROOT, 'patches-mips64el')
SRC = 'src'
SRC_DIR = os.path.join(SOURCE_ROOT, SRC)


def main():
  folders = [PATCHES_DIR]
  if os.environ.has_key('MAS_BUILD'):
    folders.append(PATCHES_MAS_DIR)
  if sys.argv[1] == 'mips64el':
    folders.append(PATCHES_MIPS64EL_DIR)

  for folder in folders:
    error = apply_patches_for_dir(folder)
    if error:
      sys.stderr.write(error + '\n')
      sys.stderr.flush()
      return 1

  return 0


def apply_patches_for_dir(directory):
  for root, dirs, files in os.walk(directory):
    prefix = os.path.relpath(root, directory)
    repo = SRC if prefix == '.' else os.path.join(SRC, prefix)

    (success, failed_patches) = apply_patches_from_directory(repo, root)
    if not success:
      patch_path = failed_patches[0].get_file_path()
      return '{0} failed to apply'.format(os.path.basename(patch_path))


if __name__ == '__main__':
    sys.exit(main())
