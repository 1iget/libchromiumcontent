#!/usr/bin/env python

import os
import subprocess
import sys


SOURCE_ROOT = os.path.abspath(os.path.dirname(os.path.dirname(__file__)))
PATCHES_DIR = os.path.join(SOURCE_ROOT, 'patches')
PATCHES_MAS_DIR = os.path.join(SOURCE_ROOT, 'patches-mas')
VENDOR_DIR = os.path.join(SOURCE_ROOT, 'vendor')
CHROMIUM_DIR = os.path.join(VENDOR_DIR, 'chromium')
SRC_DIR = os.path.join(CHROMIUM_DIR, 'src')


def main():
  reset_chromium_submodule()

  error = apply_patches_for_dir(PATCHES_DIR)
  if not error:
    if os.environ.has_key('MAS_BUILD'):
      error = apply_patches_for_dir(PATCHES_MAS_DIR)
    if not error:
      return

  sys.stderr.write(error + '\n')
  sys.stderr.flush()
  return 1


def reset_chromium_submodule():
  subprocess.check_call(['git', 'reset', '--hard', 'HEAD'], cwd=CHROMIUM_DIR)
  subprocess.check_call(['git', 'clean', '-dff'], cwd=CHROMIUM_DIR)

def apply_patches_for_dir(directory):
  for root, dirs, files in os.walk(directory):
    prefix = os.path.relpath(root, directory)
    target = 'src'
    if prefix != '.':
      target = os.path.join(target, prefix)
    args = ['git', 'apply', '--directory', target]
    for name in sorted(files):
      if not name.endswith('.patch'):
        continue
      patch = os.path.join(root, name)
      if subprocess.call(args + [patch], cwd=CHROMIUM_DIR):
        return '{0} failed to apply'.format(os.path.basename(patch))


if __name__ == '__main__':
    sys.exit(main())
