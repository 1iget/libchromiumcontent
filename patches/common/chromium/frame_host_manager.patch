diff --git a/content/browser/frame_host/render_frame_host_manager.cc b/content/browser/frame_host/render_frame_host_manager.cc
index d7342d69dd8e..8efeb43ecc55 100644
--- a/content/browser/frame_host/render_frame_host_manager.cc
+++ b/content/browser/frame_host/render_frame_host_manager.cc
@@ -964,6 +964,20 @@ RenderFrameHostManager::GetSiteInstanceForNavigation(
 
   SiteInstance* current_instance = render_frame_host_->GetSiteInstance();
 
+  // Gives user a chance to pass a custom side instance.
+  SiteInstance* client_custom_instance = current_instance;
+  GetContentClient()->browser()->OverrideSiteInstanceForNavigation(
+      render_frame_host_.get(),
+      delegate_->GetControllerForRenderManager().GetBrowserContext(),
+      current_instance,
+      dest_url,
+      &client_custom_instance);
+  if (client_custom_instance != current_instance) {
+    GetContentClient()->browser()->OnCreateSiteInstanceForNavigation(
+        client_custom_instance, render_frame_host_.get());
+    return client_custom_instance;
+  }
+
   // We do not currently swap processes for navigations in webview tag guests.
   if (current_instance->GetSiteURL().SchemeIs(kGuestScheme))
     return current_instance;
@@ -1035,6 +1049,8 @@ RenderFrameHostManager::GetSiteInstanceForNavigation(
   // BrowserContext.
   DCHECK_EQ(new_instance->GetBrowserContext(), browser_context);
 
+  GetContentClient()->browser()->OnCreateSiteInstanceForNavigation(
+      new_instance.get(), render_frame_host_.get());
   // If |new_instance| is a new SiteInstance for a subframe that requires a
   // dedicated process, set its process reuse policy so that such subframes are
   // consolidated into existing processes for that site.
diff --git a/content/public/browser/content_browser_client.h b/content/public/browser/content_browser_client.h
index 5373ee07b5cd..6075a7233852 100644
--- a/content/public/browser/content_browser_client.h
+++ b/content/public/browser/content_browser_client.h
@@ -153,6 +154,14 @@ class CONTENT_EXPORT ContentBrowserClient {
  public:
   virtual ~ContentBrowserClient() {}
 
+  // Electron: Allows overriding the SiteInstance when navigating.
+  virtual void OverrideSiteInstanceForNavigation(
+      RenderFrameHost* render_frame_host,
+      BrowserContext* browser_context,
+      SiteInstance* current_instance,
+      const GURL& dest_url,
+      SiteInstance** new_instance) {}
+
   // Allows the embedder to set any number of custom BrowserMainParts
   // implementations for the browser startup code. See comments in
   // browser_main_parts.h.
