This disables some debug checks which currently fail when running the Electron
test suite. In general there should be sustained effort to have all debug checks
enabled. If you want to help, choose one of the diffs below and remove it. Then
build Electron (debug configuration) and make sure all tests pass on the CI
systems. Unfortunately the tests don't always cover the check failures, so it's
good to also run some non-trivial Electron app to verify.

Apart from getting rid of a whole diff, you may also be able to replace one diff
with another which enables at least some of the previously disabled checks. For
example, the checks might be disabled for a whole build target, but actually
only one or two specific checks fail. Then it's better to simply comment out the
failing checks and allow the rest of the target to have them enabled.

Please keep the following lists updated.

The ELECTRON_NO_DCHECK build flag disables debug checks universally.
This patch applies the flag to the following GN targets:

  base:base
  content/browser:browser
  content/child:child
  device/geolocation:geolocation
  net:net
  third_party/WebKit/Source/core/loader:loader
  third_party/WebKit/Source/platform:platform
  ui/base:base
  url:url

These files have debug checks explicitly commented out:

  content/browser/webui/shared_resources_data_source.cc
  storage/browser/quota/client_usage_tracker.cc
  third_party/WebKit/Source/platform/wtf/ThreadRestrictionVerifier.h
  ui/latency/latency_histogram_macros.h


diff --git a/base/BUILD.gn b/base/BUILD.gn
index 6b922adf..061ac83 100644
--- a/base/BUILD.gn
+++ b/base/BUILD.gn
@@ -1678,6 +1678,10 @@ component("base") {
     configs -= [ "//build/config/compiler:default_optimization" ]
     configs += [ "//build/config/compiler:optimize_max" ]
   }
+
+  if (is_electron_build) {
+    defines += [ "ELECTRON_NO_DCHECK" ]
+  }
 }
 
 buildflag_header("debugging_flags") {
diff --git a/base/logging.h b/base/logging.h
index 582fb89..24d3e82 100644
--- a/base/logging.h
+++ b/base/logging.h
@@ -850,7 +850,7 @@ const LogSeverity LOG_DCHECK = LOG_INFO;
 
 #else  // !(defined(_PREFAST_) && defined(OS_WIN))
 
-#if DCHECK_IS_ON()
+#if DCHECK_IS_ON() && !defined(ELECTRON_NO_DCHECK)
 
 #define DCHECK(condition)                                           \
   LAZY_STREAM(LOG_STREAM(DCHECK), !ANALYZER_ASSUME_TRUE(condition)) \
diff --git a/content/browser/BUILD.gn b/content/browser/BUILD.gn
index 4131815..d5500a2 100644
--- a/content/browser/BUILD.gn
+++ b/content/browser/BUILD.gn
@@ -2170,6 +2170,10 @@ source_set("browser") {
       "hyphenation/hyphenation_impl.h",
     ]
   }
+  
+  if (is_electron_build) {
+    defines += [ "ELECTRON_NO_DCHECK" ]
+  }
 }
 
 buildflag_header("accessibility_flags") {
diff --git a/content/browser/webui/shared_resources_data_source.cc b/content/browser/webui/shared_resources_data_source.cc
index 86f1cce409ed..f9ec23d6af89 100644
--- a/content/browser/webui/shared_resources_data_source.cc
+++ b/content/browser/webui/shared_resources_data_source.cc
@@ -103,7 +103,7 @@ void SharedResourcesDataSource::StartDataRequest(
     const ResourceRequestInfo::WebContentsGetter& wc_getter,
     const URLDataSource::GotDataCallback& callback) {
   int idr = GetIdrForPath(path);
-  DCHECK_NE(-1, idr) << " path: " << path;
+  // DCHECK_NE(-1, idr) << " path: " << path;
   scoped_refptr<base::RefCountedMemory> bytes;
 
   if (idr == IDR_WEBUI_CSS_TEXT_DEFAULTS) {
diff --git a/content/child/BUILD.gn b/content/child/BUILD.gn
index db74c7691680..29e5895304be 100644
--- a/content/child/BUILD.gn
+++ b/content/child/BUILD.gn
@@ -293,6 +293,13 @@ target(link_target_type, "child") {
     "//content:content_implementation",
     "//build/config/compiler:no_size_t_to_int_warning",
   ]
+
+  if (is_electron_build) {
+    if (!defined(defines)) {
+      defines = []
+    }
+    defines += [ "ELECTRON_NO_DCHECK" ]
+  }
 }
 
 # See comment at the top of //content/BUILD.gn for how this works.
diff --git a/device/geolocation/BUILD.gn b/device/geolocation/BUILD.gn
index 27069c5f9700..8a4bb3842a42 100644
--- a/device/geolocation/BUILD.gn
+++ b/device/geolocation/BUILD.gn
@@ -115,6 +115,10 @@ component("geolocation") {
       "Foundation.framework",
     ]
   }
+
+  if (is_electron_build) {
+    defines += [ "ELECTRON_NO_DCHECK" ]
+  }
 }
 
 if (is_android) {
diff --git a/net/BUILD.gn b/net/BUILD.gn
index 13c5191..244883a 100644
--- a/net/BUILD.gn
+++ b/net/BUILD.gn
@@ -2170,6 +2170,13 @@ component("net") {
       sources += [ "filter/brotli_source_stream_disabled.cc" ]
     }
   }
+
+  if (is_electron_build) {
+    if (!defined(defines)) {
+      defines = []
+    }
+    defines += [ "ELECTRON_NO_DCHECK" ]
+  }
 }
 
 grit("net_resources") {
diff --git a/storage/browser/quota/client_usage_tracker.cc b/storage/browser/quota/client_usage_tracker.cc
index 9b9e10a46397..dafc6e4efa32 100644
--- a/storage/browser/quota/client_usage_tracker.cc
+++ b/storage/browser/quota/client_usage_tracker.cc
@@ -149,8 +149,8 @@ void ClientUsageTracker::UpdateUsageCache(const GURL& origin, int64_t delta) {
       global_unlimited_usage_ += delta;
     else
       global_limited_usage_ += delta;
-    DCHECK_GE(cached_usage_by_host_[host][origin], 0);
-    DCHECK_GE(global_limited_usage_, 0);
+    //DCHECK_GE(cached_usage_by_host_[host][origin], 0);
+    //DCHECK_GE(global_limited_usage_, 0);
 
     // Notify the usage monitor that usage has changed. The storage monitor may
     // be NULL during tests.
diff --git a/third_party/WebKit/Source/core/loader/BUILD.gn b/third_party/WebKit/Source/core/loader/BUILD.gn
index 86c8ada9d378..ff1155205218 100644
--- a/third_party/WebKit/Source/core/loader/BUILD.gn
+++ b/third_party/WebKit/Source/core/loader/BUILD.gn
@@ -125,4 +125,11 @@ blink_core_sources("loader") {
     # TODO(jschuh): crbug.com/167187 fix size_t to int truncations.
     "//build/config/compiler:no_size_t_to_int_warning",
   ]
+
+  if (is_electron_build) {
+    if (!defined(defines)) {
+      defines = []
+    }
+    defines += [ "ELECTRON_NO_DCHECK" ]
+  }
 }
diff --git a/third_party/WebKit/Source/platform/BUILD.gn b/third_party/WebKit/Source/platform/BUILD.gn
index 7806a71..4550819 100644
--- a/third_party/WebKit/Source/platform/BUILD.gn
+++ b/third_party/WebKit/Source/platform/BUILD.gn
@@ -1707,6 +1707,10 @@ component("platform") {
     configs -= [ "//build/config/compiler:default_symbols" ]
     configs += remove_webcore_symbols_config
   }
+
+  if (is_electron_build) {
+    defines += [ "ELECTRON_NO_DCHECK" ]
+  }
 }
 
 static_library("test_support") {
diff --git a/third_party/WebKit/Source/platform/wtf/ThreadRestrictionVerifier.h b/third_party/WebKit/Source/platform/wtf/ThreadRestrictionVerifier.h
index 73c4d74ef3c1..d4a1a6c5696b 100644
--- a/third_party/WebKit/Source/platform/wtf/ThreadRestrictionVerifier.h
+++ b/third_party/WebKit/Source/platform/wtf/ThreadRestrictionVerifier.h
@@ -85,13 +85,13 @@ class ThreadRestrictionVerifier {
  private:
   // Indicates that the object may (or may not) be owned by more than one place.
   void SetShared(bool shared) {
-    bool previously_shared = shared_;
+    // bool previously_shared = shared_;
     shared_ = shared;
 
     if (!shared_)
       return;
 
-    DCHECK_NE(shared, previously_shared);
+    // DCHECK_NE(shared, previously_shared);
     // Capture the current thread to verify that subsequent ref/deref happen on
     // this thread.
     owning_thread_ = CurrentThread();
diff --git a/ui/base/BUILD.gn b/ui/base/BUILD.gn
index 119d0fab47c9..7f9110f8b197 100644
--- a/ui/base/BUILD.gn
+++ b/ui/base/BUILD.gn
@@ -647,6 +647,10 @@ component("base") {
   if (is_android || is_ios) {
     sources -= [ "device_form_factor_desktop.cc" ]
   }
+
+  if (is_electron_build) {
+    defines += [ "ELECTRON_NO_DCHECK" ]
+  }
 }
 
 static_library("test_support") {
diff --git a/ui/latency/latency_histogram_macros.h b/ui/latency/latency_histogram_macros.h
index 77e3eeef70ba..e4f94f550778 100644
--- a/ui/latency/latency_histogram_macros.h
+++ b/ui/latency/latency_histogram_macros.h
@@ -23,7 +23,7 @@
       1, 1000000, 100);
 
 #define UMA_HISTOGRAM_INPUT_LATENCY_MILLISECONDS(name, start, end)           \
-  CONFIRM_VALID_TIMING(start, end)                                           \
+  /* CONFIRM_VALID_TIMING(start, end) */                                     \
   base::UmaHistogramCustomCounts(                                            \
       name, (end.last_event_time - start.first_event_time).InMilliseconds(), \
       1, 1000, 50);
diff --git a/url/BUILD.gn b/url/BUILD.gn
index 82eb115ae666..b4806804cdbf 100644
--- a/url/BUILD.gn
+++ b/url/BUILD.gn
@@ -96,6 +96,10 @@ component("url") {
     ]
     deps += [ "//third_party/icu" ]
   }
+
+  if (is_electron_build) {
+    defines += [ "ELECTRON_NO_DCHECK" ]
+  }
 }
 
 if (is_android) {
